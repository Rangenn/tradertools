/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JPanelInvoice.java
 *
 * Created on 27.02.2009, 19:41:59
 */

package view.panel;

import entity.Invoice;
import entity.InvoiceProduct;
import java.awt.event.ActionListener;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JTable;
import util.ConvertUtil;
import view.componentmodel.TMInvoiceProduct;

/**
 *
 * @author е
 */
public class JPanelInvoice extends javax.swing.JPanel implements IEntityView<Invoice> {

    protected Invoice data;
    protected boolean Editable;

    /** Creates new form JPanelInvoice */
    public JPanelInvoice() {
        initComponents();
        getTable().setColumnSelectionAllowed(false);
        getTable().getColumnModel().getColumn(0).setPreferredWidth(WIDTH);
        getTable().setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        clearData();
        //viewAllColumns();//в конструкторе не работает, вызывать извне
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelInvoiceNumber = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabelSum = new javax.swing.JLabel();
        jLabelSumValue = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelCreationDate = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabelSeller = new javax.swing.JLabel();
        jLabelBuyer = new javax.swing.JLabel();

        jLabelInvoiceNumber.setText("____");

        jTable1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "№", "Наименование", "Цена", "Кол-во", "Сумма"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabelSum.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabelSum.setText("Итого:");

        jLabelSumValue.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabelSumValue.setText("______ руб.");

        jLabel1.setText("Счет №");

        jLabel2.setText("от");

        jLabelCreationDate.setText("________");

        jLabel3.setText("Продавец");

        jLabel4.setText("Покупатель");

        jLabelSeller.setText("___________");

        jLabelBuyer.setText("___________");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jLabelSum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelSumValue)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelInvoiceNumber))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelBuyer, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                        .addGap(324, 324, 324))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabelSeller, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelCreationDate)))
                        .addContainerGap(326, Short.MAX_VALUE))))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelInvoiceNumber)
                    .addComponent(jLabel2)
                    .addComponent(jLabelCreationDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabelSeller))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabelBuyer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSum)
                    .addComponent(jLabelSumValue)))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelBuyer;
    private javax.swing.JLabel jLabelCreationDate;
    private javax.swing.JLabel jLabelInvoiceNumber;
    private javax.swing.JLabel jLabelSeller;
    private javax.swing.JLabel jLabelSum;
    private javax.swing.JLabel jLabelSumValue;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    // <editor-fold defaultstate="collapsed" desc="ActionListeners">
    public void addDoubleClickOnTableListener(final ActionListener l)
    {
        getTable().addMouseListener(ConvertUtil.convert(l));
    }

    public void addDoubleClickOnSellerListener(final ActionListener l)
    {
        jLabelSeller.addMouseListener(ConvertUtil.convert(l));
    }

    public void addDoubleClickOnBuyerListener(final ActionListener l)
    {
        jLabelBuyer.addMouseListener(ConvertUtil.convert(l));
    }

    public void addDoubleClickOnInvoiceNumberListener(final ActionListener l)
    {
        jLabelInvoiceNumber.addMouseListener(ConvertUtil.convert(l));
    }

    public void addDoubleClickOnCreationDateListener(final ActionListener l)
    {
        jLabelCreationDate.addMouseListener(ConvertUtil.convert(l));
    }
    // </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="Properties">
    public boolean isEditable() {
        return Editable;
    }

    public void setEditable(boolean Editable) {
        this.Editable = Editable;
    }

    public Invoice getData() {
        return data;
    }

    public void setData(Invoice data) {
        this.data = data;
        updateDisplay();
    }
    // </editor-fold>

    public void clearData() {
         Invoice i = new Invoice();
         i.setInvoiceProductCollection(new ArrayList<InvoiceProduct>());
         i.setInvoiceSum(new BigDecimal(0));
         i.setCreationDate(new Date());
         setData(i);
    }

    public void updateDisplay() {
        if (data == null) return;
        
        if (data.getId() != null)
            jLabelInvoiceNumber.setText(data.getId().toString());
        if (data.getCreationDate() != null)
            jLabelCreationDate.setText(
                    new SimpleDateFormat("dd.MM.yyyy").format(data.getCreationDate()));
        if (data.getInvoiceSum() != null)
            jLabelSumValue.setText(data.getInvoiceSum().toString() + " р.");
        else jLabelSumValue.setText("");
        if (data.getBuyerId() != null)
            jLabelBuyer.setText(data.getBuyerId().toString());
        if (data.getSellerId() != null)
            jLabelSeller.setText(data.getSellerId().toString());
        jTable1.setModel(new TMInvoiceProduct(data.getInvoiceProductCollection()));
        for(int i = 0; i < getTable().getColumnCount(); i++)
            getTable().getColumnModel().getColumn(i).setMinWidth(0);
        viewAllColumns();
        jTable1.updateUI();//?
    }


    /**
     * @return the jTable1
     */
    public javax.swing.JTable getTable() {
        return jTable1;
    }

    public InvoiceProduct getSelectedItem() {
        try {
            return data.getInvoiceProductCollection().get(getTable().getSelectedRow());
        }
        catch (IndexOutOfBoundsException ex) {
            return null;
        }
        catch (IllegalStateException ex){
            return null;
        }
    }

   public List<InvoiceProduct> getSelectedItems(){
        List<InvoiceProduct> res = new ArrayList<InvoiceProduct>();
        for(int i = 0; i < getTable().getSelectedRowCount(); i++)
            try {
                res.add(data.getInvoiceProductCollection().get(getTable().getSelectedRows()[i]));
            }
            catch (IndexOutOfBoundsException ex) {
                //return null;
            }
            catch (IllegalStateException ex){
                //return null;
            }
        return res;
    }

    public void viewAllColumns() {
         for(int i = 0; i < getTable().getColumnCount(); i++){
            setColumnVisible(i,true);
        }
    }

    public void setColumnVisible(int index, boolean isVisible){
        if (index < 0 || index > getTable().getColumnCount() - 1) return;
        int tmp = 0;
        if (isVisible)
            try {
                tmp = ((TMInvoiceProduct)getTable().getModel()).getColumnPreferredWidth(index);
            }
            catch (ClassCastException ex) {
                System.out.println(ex.getMessage());
            }
        getTable().getColumnModel().getColumn(index).setPreferredWidth(tmp);
    }
}
